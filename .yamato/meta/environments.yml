upm:
  registry_url: https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
  package_version: stable
intra_pypi_url: https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
editors:
  - version: 2019.4
platforms:
  - name: win
    type: Unity::VM::GPU
    image: renderstreaming/win10:latest
    flavor: b1.large
    packed_webapp_name: webserver.exe
    test_params:
# todo(kazuki) : this comment is workaround for avoiding template test error on Yamato.
# "PackageTestSuite.PackageValidationTests.PackageHasTests" unittest is failed 
# Error message : A package must have either playmode or editor tests in it. If you are using a different package for your tests, make sure to use the 'relatedPackages' field in your main package's manifest like explained here: https://confluence.hq.unity3d.com/display/PAK/How+to+add+a+test+project+for+your+package
#      - backend: mono
#        platform: editmode
      - backend: mono
        platform: playmode
      - backend: mono
        platform: standalone
      - backend: il2cpp
        platform: standalone
  - name: mac
    type: Unity::metal::macmini
    image: package-ci/mac:stable
    flavor: m1.mac
    packed_webapp_name: webserver_mac
    test_params:
      - backend: mono
        platform: playmode
      - backend: mono
        platform: standalone
      - backend: il2cpp
        platform: standalone
  - name: linux
    type: Unity::VM::GPU
    image: renderstreaming/ubuntu-18.04:latest
    flavor: b1.large
    packed_webapp_name: webserver
    test_params:
      - backend: mono
        platform: playmode
      - backend: mono
        platform: standalone
      - backend: il2cpp
        platform: standalone
projects:
  - name: renderstreaming-hd
    packagename: com.unity.template.renderstreaming-hd
  - name: renderstreaming-rtx
    packagename: com.unity.template.renderstreaming-rtx    